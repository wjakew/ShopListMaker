/*
JAKUB WAWAK
ALL RIGHTS RESERVED.
kubawawak@gmail.com
 */
package shoplistmaker;

import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;
import java.util.List;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.nio.charset.Charset;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author jakubwawak
 */
public class main_window extends javax.swing.JFrame implements WindowListener {

    /**
     * Creates new form main_window
     */
    
    //model listy zakupow
    DefaultListModel<String> lista_model;
    ArrayList<String> lista_zakupow;
    
    //labele
    String field_label = "";
    InfoHandler program_info;
    
    public main_window(InfoHandler info) {
        super("ShopListMaker");
        program_info = info;
        lista_model = new DefaultListModel<>();
        lista_zakupow = new ArrayList<>();
        
        
        initComponents();
        setLocationRelativeTo(null);
        
        update_database_menu();
        
        setVisible(true);
    }
    
    void prepare_list_model(){
        lista_model.clear();
        for(String element: lista_zakupow){
            lista_model.addElement(element);
        }
    }
    
    /**
     * main_window.update_database_menu()
     * Function for updating labels and enables buttons in database menu
     */
    void update_database_menu(){
        if ( program_info.actual.connected ){
            database_label.setText("Database ready to log in!");
            
            if ( program_info.actual.logged_as_user){
                database_login.setText("Log out");
                database_dictionary.setEnabled(true);
                database_myshoplists.setEnabled(true);
                database_label.setText("Logged as: "+program_info.actual.user_login);
            }
            else{
                database_login.setText("Log in");
                database_dictionary.setEnabled(false);
                database_myshoplists.setEnabled(false);
                database_label.setText("Database ready to log in!");
            }
        }
        else{
            database_login.setEnabled(false);
            database_label.setText("Unable to connect to database");
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        field_dodaj = new javax.swing.JTextField();
        dodaj_button = new javax.swing.JButton();
        usun_button = new javax.swing.JButton();
        gotowe_button = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        database_label = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menu_category_menu = new javax.swing.JMenu();
        zapisz_liste_menu = new javax.swing.JMenuItem();
        otworz_liste_menu = new javax.swing.JMenuItem();
        wyczysc_menu_item = new javax.swing.JMenuItem();
        database_menu = new javax.swing.JMenu();
        database_login = new javax.swing.JMenuItem();
        database_dictionary = new javax.swing.JMenuItem();
        database_myshoplists = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        usun_element_jmenu = new javax.swing.JMenuItem();
        generuj_wynik_jmenu = new javax.swing.JMenuItem();
        opcje_category_menu = new javax.swing.JMenu();
        informacje_menu = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        ustawienia_jMenu = new javax.swing.JCheckBoxMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lista.setModel(lista_model);
        jScrollPane1.setViewportView(lista);

        field_dodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                field_dodajActionPerformed(evt);
            }
        });
        field_dodaj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                field_dodajKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                field_dodajKeyTyped(evt);
            }
        });

        dodaj_button.setText("Add");
        dodaj_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dodaj_buttonActionPerformed(evt);
            }
        });

        usun_button.setText("Delete");
        usun_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_buttonActionPerformed(evt);
            }
        });

        gotowe_button.setText("Done");
        gotowe_button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gotowe_buttonActionPerformed(evt);
            }
        });

        jLabel1.setText("Your shopping list:");

        database_label.setText("jLabel2");

        menu_category_menu.setText("Menu");

        zapisz_liste_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.META_DOWN_MASK));
        zapisz_liste_menu.setText("Save list");
        zapisz_liste_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zapisz_liste_menuActionPerformed(evt);
            }
        });
        menu_category_menu.add(zapisz_liste_menu);

        otworz_liste_menu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.META_DOWN_MASK));
        otworz_liste_menu.setText("Open list");
        otworz_liste_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                otworz_liste_menuActionPerformed(evt);
            }
        });
        menu_category_menu.add(otworz_liste_menu);

        wyczysc_menu_item.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.META_DOWN_MASK));
        wyczysc_menu_item.setText("Clear list");
        wyczysc_menu_item.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wyczysc_menu_itemActionPerformed(evt);
            }
        });
        menu_category_menu.add(wyczysc_menu_item);

        jMenuBar1.add(menu_category_menu);

        database_menu.setText("Database");

        database_login.setText("Log in");
        database_login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                database_loginActionPerformed(evt);
            }
        });
        database_menu.add(database_login);

        database_dictionary.setText("Dictionary ");
        database_dictionary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                database_dictionaryActionPerformed(evt);
            }
        });
        database_menu.add(database_dictionary);

        database_myshoplists.setText("My Shop lists");
        database_menu.add(database_myshoplists);

        jMenuBar1.add(database_menu);

        jMenu1.setText("Actions");

        usun_element_jmenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.META_DOWN_MASK));
        usun_element_jmenu.setText("Delete Element");
        usun_element_jmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                usun_element_jmenuActionPerformed(evt);
            }
        });
        jMenu1.add(usun_element_jmenu);

        generuj_wynik_jmenu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.META_DOWN_MASK));
        generuj_wynik_jmenu.setText("Generate result");
        generuj_wynik_jmenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generuj_wynik_jmenuActionPerformed(evt);
            }
        });
        jMenu1.add(generuj_wynik_jmenu);

        jMenuBar1.add(jMenu1);

        opcje_category_menu.setText("Options");

        informacje_menu.setText("Information");
        informacje_menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                informacje_menuActionPerformed(evt);
            }
        });
        opcje_category_menu.add(informacje_menu);

        jMenuItem1.setText("Help");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        opcje_category_menu.add(jMenuItem1);

        ustawienia_jMenu.setSelected(true);
        ustawienia_jMenu.setText("Settings");
        ustawienia_jMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ustawienia_jMenuActionPerformed(evt);
            }
        });
        opcje_category_menu.add(ustawienia_jMenu);

        jMenuBar1.add(opcje_category_menu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(field_dodaj)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(usun_button, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dodaj_button, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                        .addGap(29, 29, 29))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(gotowe_button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(database_label)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(5, 5, 5)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dodaj_button)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(usun_button))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(field_dodaj)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(gotowe_button, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                .addGap(27, 27, 27)
                .addComponent(database_label)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void informacje_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_informacje_menuActionPerformed
        JOptionPane.showMessageDialog(this, "by Jakub Wawak 2020 "+program_info.version);
    }//GEN-LAST:event_informacje_menuActionPerformed

    private void zapisz_liste_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zapisz_liste_menuActionPerformed
        if(!lista_zakupow.isEmpty()){
            JFileChooser fileChooser = new JFileChooser();
            if (fileChooser.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
                File file = fileChooser.getSelectedFile();
                try {
                    Files.write(Paths.get(file.getAbsolutePath()), lista_zakupow, Charset.forName("UTF-8"));
                    JOptionPane.showMessageDialog(this, "List saved");
                    lista_zakupow.clear();
                    prepare_list_model();
                } catch (IOException ex) {
                    Logger.getLogger(main_window.class.getName()).log(Level.SEVERE, null, ex);
                }    
            }
            else{
                 JOptionPane.showMessageDialog(this, "Choose correct file");
                    }
        }
        else{
            JOptionPane.showMessageDialog(this, "List is empty");
        }
        
    }//GEN-LAST:event_zapisz_liste_menuActionPerformed

    private void dodaj_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dodaj_buttonActionPerformed
        String to_add = field_dodaj.getText();
        if(to_add.equals("")){
            JOptionPane.showMessageDialog(this, "There is nothing to add!");
        }
        else{
            lista_zakupow.add(to_add);
            prepare_list_model();
            field_dodaj.setText("");
        }
    }//GEN-LAST:event_dodaj_buttonActionPerformed

    private void usun_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_buttonActionPerformed
        if(lista.getSelectedValue()!=null){
            String selected = lista.getSelectedValue();
            lista_zakupow.remove(selected);
            prepare_list_model();
        }
        else{
            JOptionPane.showMessageDialog(this, "No element has been selected");
        }
        
    }//GEN-LAST:event_usun_buttonActionPerformed

    private void otworz_liste_menuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_otworz_liste_menuActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        if (fileChooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
          File plik = fileChooser.getSelectedFile();
          Path sciezka = Paths.get(plik.getAbsolutePath());
            try {
                List<String> wszystkie_linie = Files.readAllLines(sciezka,Charset.forName("UTF-8"));
                
                lista_zakupow.clear();
                for(String s: wszystkie_linie){
                    lista_zakupow.add(s);
                }
                prepare_list_model();
                
            } catch (IOException ex) {
                Logger.getLogger(main_window.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_otworz_liste_menuActionPerformed

    private void wyczysc_menu_itemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wyczysc_menu_itemActionPerformed
        lista_zakupow.clear();
        prepare_list_model();
    }//GEN-LAST:event_wyczysc_menu_itemActionPerformed

    private void gotowe_buttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gotowe_buttonActionPerformed
        if(new File(program_info.to_pass.get_dict_path()).exists()){//jesli plik istnieje
           if(!lista_zakupow.isEmpty()){
            program_info.act_cart = new Shoplifter(lista_zakupow,program_info);
            new show_window(this,true,program_info);
            }
            else{
                JOptionPane.showMessageDialog(this, "Shopping list is empty");
            }
        }
        else{
            JFileChooser myFileChooser = new JFileChooser();
            myFileChooser.setDialogTitle("File localization was changed");

            if(myFileChooser.showOpenDialog(null) == JFileChooser.APPROVE_OPTION){
                String path = myFileChooser.getSelectedFile().getAbsolutePath();

                if(path.contains("dict")&&path.endsWith(".txt")){
                    try {
                        program_info.to_pass.change_path(path);
                    } catch (FileNotFoundException ex) {
                        Logger.getLogger(ustawienia_window.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            JOptionPane.showMessageDialog(this,program_info.to_pass.get_dict_path());
            
            
            if(!lista_zakupow.isEmpty()){
                program_info.act_cart = new Shoplifter(lista_zakupow,program_info);
                new show_window(this,true,program_info);
                }
            else{
                JOptionPane.showMessageDialog(this, "Shopping list is empty");
            }
        }
        
    }//GEN-LAST:event_gotowe_buttonActionPerformed

    private void field_dodajKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_dodajKeyTyped
        
    }//GEN-LAST:event_field_dodajKeyTyped

    private void field_dodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_field_dodajActionPerformed
       
    }//GEN-LAST:event_field_dodajActionPerformed

    private void field_dodajKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_field_dodajKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER) {
            String to_add = field_dodaj.getText();
            if(to_add.equals("")){
                JOptionPane.showMessageDialog(this, "There is nothing to add!");
            }
            else{
                lista_zakupow.add(to_add);
                prepare_list_model();
                field_dodaj.setText("");
            }
        }
    }//GEN-LAST:event_field_dodajKeyPressed

    private void usun_element_jmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_usun_element_jmenuActionPerformed
        if(lista.getSelectedValue()!=null){
            String selected = lista.getSelectedValue();
            lista_zakupow.remove(selected);
            prepare_list_model();
        }
        else{
            JOptionPane.showMessageDialog(this, "No element has been selected");
        }
    }//GEN-LAST:event_usun_element_jmenuActionPerformed

    private void generuj_wynik_jmenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generuj_wynik_jmenuActionPerformed
        if(!lista_zakupow.isEmpty()){
            program_info.act_cart = new Shoplifter(lista_zakupow,program_info);
            new show_window(this,true,program_info);
        }
        else{
            JOptionPane.showMessageDialog(this, "Shopping list is empty");
        }
    }//GEN-LAST:event_generuj_wynik_jmenuActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        new pomoc_window(this,true,program_info);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ustawienia_jMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ustawienia_jMenuActionPerformed
        new ustawienia_window(this,true,program_info);
    }//GEN-LAST:event_ustawienia_jMenuActionPerformed

    private void database_loginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_database_loginActionPerformed
        if( program_info.actual.logged_as_user ){
            program_info.actual.log_out();
            update_database_menu();
        }
        else{
            new login_window(this,true,program_info);
            update_database_menu();
        }
    }//GEN-LAST:event_database_loginActionPerformed

    private void database_dictionaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_database_dictionaryActionPerformed
        DictReader d = new DictReader("",program_info);
        new dictionary_window(this,true,program_info,d);
    }//GEN-LAST:event_database_dictionaryActionPerformed

    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem database_dictionary;
    private javax.swing.JLabel database_label;
    private javax.swing.JMenuItem database_login;
    private javax.swing.JMenu database_menu;
    private javax.swing.JMenuItem database_myshoplists;
    private javax.swing.JButton dodaj_button;
    private javax.swing.JTextField field_dodaj;
    private javax.swing.JMenuItem generuj_wynik_jmenu;
    private javax.swing.JButton gotowe_button;
    private javax.swing.JMenuItem informacje_menu;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> lista;
    private javax.swing.JMenu menu_category_menu;
    private javax.swing.JMenu opcje_category_menu;
    private javax.swing.JMenuItem otworz_liste_menu;
    private javax.swing.JCheckBoxMenuItem ustawienia_jMenu;
    private javax.swing.JButton usun_button;
    private javax.swing.JMenuItem usun_element_jmenu;
    private javax.swing.JMenuItem wyczysc_menu_item;
    private javax.swing.JMenuItem zapisz_liste_menu;
    // End of variables declaration//GEN-END:variables

    @Override
    public void windowOpened(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowClosing(WindowEvent e) {
    }

    @Override
    public void windowClosed(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowIconified(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeiconified(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowActivated(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void windowDeactivated(WindowEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
